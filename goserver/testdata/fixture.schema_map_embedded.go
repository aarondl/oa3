// Code generated by oa3 (https://github.com/aarondl/oa3). DO NOT EDIT.
// This file is meant to be re-generated in place and/or deleted at any time.
package oa3gen

import (
	"strings"

	"github.com/aarondl/oa3/support"
)

// Map types with an embedded object
type MapEmbedded map[string]MapEmbeddedItem

type MapEmbeddedItem struct {
	Prop string `json:"prop"`
}

// ValidateSchemaMapEmbeddedItem validates the object and returns
// errors that can be returned to the user.
func (o MapEmbeddedItem) ValidateSchemaMapEmbeddedItem() support.Errors {
	var ctx []string
	var ers []error
	var errs support.Errors
	_, _, _ = ctx, ers, errs

	errs = support.AddErrs(errs, "", ers...)

	return errs
}

// ValidateSchemaMapEmbedded validates the object and returns
// errors that can be returned to the user.
func (o MapEmbedded) ValidateSchemaMapEmbedded() support.Errors {
	var ctx []string
	var ers []error
	var errs support.Errors
	_, _, _ = ctx, ers, errs

	for k, o := range o {
		var ers []error
		ctx = append(ctx, k)

		errs = support.AddErrs(errs, strings.Join(ctx, "."), ers...)
		ctx = ctx[:len(ctx)-1]
	}

	errs = support.AddErrs(errs, "", ers...)

	return errs
}
