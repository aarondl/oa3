// Code generated by oa3 (https://github.com/aarondl/oa3). DO NOT EDIT.
// This file is meant to be re-generated in place and/or deleted at any time.
package oa3gen

import (
	"io"
	"net/http"
	"time"

	"github.com/aarondl/chrono"
	"github.com/aarondl/oa3/support"
	"github.com/aarondl/opt/null"
	"github.com/aarondl/opt/omit"
	"github.com/aarondl/opt/omitnull"
	"github.com/go-chi/chi/v5"
	"github.com/google/uuid"
	"github.com/shopspring/decimal"
)

// Interface is the interface that an application server must implement
// in order to use this package.
//
// A great api
type Interface interface {
	// Authenticate post /auth
	Authenticate(w http.ResponseWriter, r *http.Request) (*HTTPStatusOk, error)
	// TestArrayRequest get /test/array/request
	TestArrayRequest(w http.ResponseWriter, r *http.Request, body TestArrayRequestInline) (*HTTPStatusOk, error)
	// TestMapsArrayInline get /test/arraymaps
	TestMapsArrayInline(w http.ResponseWriter, r *http.Request) (*TestMapsArrayInline200Inline, error)
	// TestMapsArrayRef post /test/arraymaps
	TestMapsArrayRef(w http.ResponseWriter, r *http.Request) (*TestMapsArrayRef200Inline, error)
	// TestEnumQueryRequest get /test/enum/query/request
	TestEnumQueryRequest(w http.ResponseWriter, r *http.Request, body TestEnumQueryRequestInline, sort TestEnumQueryRequestGetSortParam) (*HTTPStatusOk, error)
	// TestInlinePrimitiveBody get /test/inline
	TestInlinePrimitiveBody(w http.ResponseWriter, r *http.Request, body string) (*HTTPStatusOk, error)
	// TestInline post /test/inline
	TestInline(w http.ResponseWriter, r *http.Request, body TestInlineInline) (TestInlineResponse, error)
	// TestMapsInline get /test/maps
	TestMapsInline(w http.ResponseWriter, r *http.Request) (*TestMapsInline200Inline, error)
	// TestMapsRef post /test/maps
	TestMapsRef(w http.ResponseWriter, r *http.Request) (*MapAny, error)
	// TestQueryIntArrayParam post /test/queryintarrayparam
	TestQueryIntArrayParam(w http.ResponseWriter, r *http.Request, intarray omit.Val[TestQueryIntArrayParamPostIntarrayParam], intarrayrequired TestQueryIntArrayParamPostIntarrayrequiredParam) (*HTTPStatusOk, error)
	// TestServerPathOverrideRequest get /test/servers
	TestServerPathOverrideRequest(w http.ResponseWriter, r *http.Request) (*HTTPStatusOk, error)
	// TestServerOpOverrideRequest post /test/servers
	TestServerOpOverrideRequest(w http.ResponseWriter, r *http.Request) (*HTTPStatusOk, error)
	// TestSingleServerPathOverrideRequest get /test/single_servers
	TestSingleServerPathOverrideRequest(w http.ResponseWriter, r *http.Request) (*HTTPStatusOk, error)
	// TestSingleServerOpOverrideRequest post /test/single_servers
	TestSingleServerOpOverrideRequest(w http.ResponseWriter, r *http.Request) (*HTTPStatusOk, error)
	// TestTypeOverrides get /test/type_overrides
	TestTypeOverrides(w http.ResponseWriter, r *http.Request, body *Primitives, number decimal.Decimal, date chrono.Date, numberNull null.Val[decimal.Decimal], dateNull null.Val[chrono.Date], numberNonReq omit.Val[decimal.Decimal], dateNonReq omit.Val[chrono.Date]) (*HTTPStatusOk, error)
	// TestUnknownBodyType post /test/unknown/body/type
	TestUnknownBodyType(w http.ResponseWriter, r *http.Request) (TestUnknownBodyType200Inline, error)
	// GetUser get /users/{id}
	// Retrieves a user with a long description that spans multiple lines so
	// that we can see that both wrapping and long-line support is not
	// bleeding over the sacred 80 char limit.
	GetUser(w http.ResponseWriter, r *http.Request, id string, paramComponent string, validStr omitnull.Val[GetUserGetValidStrParam], reqValidStr null.Val[GetUserGetReqValidStrParam], validInt omit.Val[int], reqValidInt int, validNum omit.Val[float64], reqValidNum float64, validBool omit.Val[bool], reqValidBool bool, reqStrFormat uuid.UUID, dateTime chrono.DateTime, date chrono.Date, timeVal chrono.Time, durationVal time.Duration, arrayPrimExplode omit.Val[GetUserGetArrayPrimExplodeParam], arrayPrimFlat GetUserGetArrayPrimFlatParam, arrayPrimIntExplode omit.Val[GetUserGetArrayPrimIntExplodeParam], arrayPrimIntFlat GetUserGetArrayPrimIntFlatParam, arrayEnumExplode omit.Val[GetUserGetArrayEnumExplodeParam], arrayEnumFlat GetUserGetArrayEnumFlatParam) (*HTTPStatusNotModified, error)
	// SetUser post /users/{id}
	// Sets a user
	SetUser(w http.ResponseWriter, r *http.Request, body *Primitives, id string, paramComponent string) (SetUserResponse, error)
}

type (
	// GoServer implements all the wrapper functionality for the API
	GoServer struct {
		impl        Interface
		converter   support.ValidationConverter
		router      *chi.Mux
		interceptor support.Interceptor
	}
)

// NewGoServer constructor
func NewGoServer(
	impl Interface,
	cnv support.ValidationConverter,
	eh support.ErrorHandler,
	mw support.MW,
	interceptor support.Interceptor,
) http.Handler {

	o := GoServer{
		impl:        impl,
		converter:   cnv,
		router:      chi.NewRouter(),
		interceptor: interceptor,
	}

	// Untagged operations
	o.router.Group(func(r chi.Router) {
		if m, ok := mw[""]; ok {
			r.Use(m...)
		}
		r.Method(http.MethodPost, `/auth`, eh.Wrap(o.authenticateOp))
		r.Method(http.MethodGet, `/test/array/request`, eh.Wrap(o.testarrayrequestOp))
		r.Method(http.MethodGet, `/test/enum/query/request`, eh.Wrap(o.testenumqueryrequestOp))
		r.Method(http.MethodPost, `/test/inline`, eh.Wrap(o.testinlineOp))
		r.Method(http.MethodGet, `/test/inline`, eh.Wrap(o.testinlineprimitivebodyOp))
		r.Method(http.MethodGet, `/test/arraymaps`, eh.Wrap(o.testmapsarrayinlineOp))
		r.Method(http.MethodPost, `/test/arraymaps`, eh.Wrap(o.testmapsarrayrefOp))
		r.Method(http.MethodGet, `/test/maps`, eh.Wrap(o.testmapsinlineOp))
		r.Method(http.MethodPost, `/test/maps`, eh.Wrap(o.testmapsrefOp))
		r.Method(http.MethodPost, `/test/queryintarrayparam`, eh.Wrap(o.testqueryintarrayparamOp))
		r.Method(http.MethodPost, `/test/servers`, eh.Wrap(o.testserveropoverriderequestOp))
		r.Method(http.MethodGet, `/test/servers`, eh.Wrap(o.testserverpathoverriderequestOp))
		r.Method(http.MethodPost, `/test/single_servers`, eh.Wrap(o.testsingleserveropoverriderequestOp))
		r.Method(http.MethodGet, `/test/single_servers`, eh.Wrap(o.testsingleserverpathoverriderequestOp))
		r.Method(http.MethodGet, `/test/type_overrides`, eh.Wrap(o.testtypeoverridesOp))
		r.Method(http.MethodPost, `/test/unknown/body/type`, eh.Wrap(o.testunknownbodytypeOp))
	})
	// users tagged operations
	o.router.Group(func(r chi.Router) {
		if m, ok := mw["users"]; ok {
			r.Use(m...)
		}
		r.Method(http.MethodGet, `/users/{id}`, eh.Wrap(o.getuserOp))
		r.Method(http.MethodPost, `/users/{id}`, eh.Wrap(o.setuserOp))
	})

	return o
}

// ServeHTTP implements http.Handler
func (o GoServer) ServeHTTP(w http.ResponseWriter, r *http.Request) {
	o.router.ServeHTTP(w, r)
}

type validatable interface {
	validateSchema() support.Errors
}

// Validate a schema
func Validate(toValidate validatable) support.Errors {
	return toValidate.validateSchema()
}

// TestInlineResponse one-of enforcer
//
// Implementors:
// - TestInline200Inline
// - TestInline201Inline
type TestInlineResponse interface {
	TestInlineImpl()
}

// TestInlineImpl implements TestInlineResponse(200) for TestInline200Inline
func (TestInline200Inline) TestInlineImpl() {}

// TestInlineImpl implements TestInlineResponse(201) for TestInline201Inline
func (TestInline201Inline) TestInlineImpl() {}

// SetUserResponse one-of enforcer
//
// Implementors:
// - SetUserWrappedResponse
// - Primitives
type SetUserResponse interface {
	SetUserImpl()
}

// SetUserWrappedResponse wraps the normal body response with a
// struct to be able to additionally return headers or differentiate between
// multiple response codes with the same response body.
type SetUserWrappedResponse struct {
	HeaderXResponseHeader omit.Val[string]
	Body                  Primitives
}

// SetUserImpl implements SetUserResponse(200) for SetUserWrappedResponse
func (SetUserWrappedResponse) SetUserImpl() {}

// SetUserImpl implements SetUserResponse(default) for Primitives
func (Primitives) SetUserImpl() {}

// HTTPStatusNotModified is an empty response
type HTTPStatusNotModified struct{}

// HTTPStatusOk is an empty response
type HTTPStatusOk struct{}
type TestUnknownBodyType200Inline io.ReadCloser

/*
Here is a copy pastable list of function signatures
for implementing the main interface

// Authenticate post /auth
func (a API) Authenticate(w http.ResponseWriter, r *http.Request) (*oa3gen.HTTPStatusOk, error) {
    panic("not implemented")
}
// TestArrayRequest get /test/array/request
func (a API) TestArrayRequest(w http.ResponseWriter, r *http.Request, body oa3gen.TestArrayRequestInline) (*oa3gen.HTTPStatusOk, error) {
    panic("not implemented")
}
// TestMapsArrayInline get /test/arraymaps
func (a API) TestMapsArrayInline(w http.ResponseWriter, r *http.Request) (*oa3gen.TestMapsArrayInline200Inline, error) {
    panic("not implemented")
}
// TestMapsArrayRef post /test/arraymaps
func (a API) TestMapsArrayRef(w http.ResponseWriter, r *http.Request) (*oa3gen.TestMapsArrayRef200Inline, error) {
    panic("not implemented")
}
// TestEnumQueryRequest get /test/enum/query/request
func (a API) TestEnumQueryRequest(w http.ResponseWriter, r *http.Request, body oa3gen.TestEnumQueryRequestInline, sort TestEnumQueryRequestGetSortParam) (*oa3gen.HTTPStatusOk, error) {
    panic("not implemented")
}
// TestInlinePrimitiveBody get /test/inline
func (a API) TestInlinePrimitiveBody(w http.ResponseWriter, r *http.Request, body string) (*oa3gen.HTTPStatusOk, error) {
    panic("not implemented")
}
// TestInline post /test/inline
func (a API) TestInline(w http.ResponseWriter, r *http.Request, body oa3gen.TestInlineInline) (oa3gen.TestInlineResponse, error) {
    panic("not implemented")
}
// TestMapsInline get /test/maps
func (a API) TestMapsInline(w http.ResponseWriter, r *http.Request) (*oa3gen.TestMapsInline200Inline, error) {
    panic("not implemented")
}
// TestMapsRef post /test/maps
func (a API) TestMapsRef(w http.ResponseWriter, r *http.Request) (*oa3gen.MapAny, error) {
    panic("not implemented")
}
// TestQueryIntArrayParam post /test/queryintarrayparam
func (a API) TestQueryIntArrayParam(w http.ResponseWriter, r *http.Request, intarray omit.Val[TestQueryIntArrayParamPostIntarrayParam], intarrayrequired TestQueryIntArrayParamPostIntarrayrequiredParam) (*oa3gen.HTTPStatusOk, error) {
    panic("not implemented")
}
// TestServerPathOverrideRequest get /test/servers
func (a API) TestServerPathOverrideRequest(w http.ResponseWriter, r *http.Request) (*oa3gen.HTTPStatusOk, error) {
    panic("not implemented")
}
// TestServerOpOverrideRequest post /test/servers
func (a API) TestServerOpOverrideRequest(w http.ResponseWriter, r *http.Request) (*oa3gen.HTTPStatusOk, error) {
    panic("not implemented")
}
// TestSingleServerPathOverrideRequest get /test/single_servers
func (a API) TestSingleServerPathOverrideRequest(w http.ResponseWriter, r *http.Request) (*oa3gen.HTTPStatusOk, error) {
    panic("not implemented")
}
// TestSingleServerOpOverrideRequest post /test/single_servers
func (a API) TestSingleServerOpOverrideRequest(w http.ResponseWriter, r *http.Request) (*oa3gen.HTTPStatusOk, error) {
    panic("not implemented")
}
// TestTypeOverrides get /test/type_overrides
func (a API) TestTypeOverrides(w http.ResponseWriter, r *http.Request, body *oa3gen.Primitives, number decimal.Decimal, date chrono.Date, numberNull null.Val[decimal.Decimal], dateNull null.Val[chrono.Date], numberNonReq omit.Val[decimal.Decimal], dateNonReq omit.Val[chrono.Date]) (*oa3gen.HTTPStatusOk, error) {
    panic("not implemented")
}
// TestUnknownBodyType post /test/unknown/body/type
func (a API) TestUnknownBodyType(w http.ResponseWriter, r *http.Request) (oa3gen.TestUnknownBodyType200Inline, error) {
    panic("not implemented")
}
// GetUser get /users/{id}
// Retrieves a user with a long description that spans multiple lines so
// that we can see that both wrapping and long-line support is not
// bleeding over the sacred 80 char limit.
func (a API) GetUser(w http.ResponseWriter, r *http.Request, id string, paramComponent string, validStr omitnull.Val[GetUserGetValidStrParam], reqValidStr null.Val[GetUserGetReqValidStrParam], validInt omit.Val[int], reqValidInt int, validNum omit.Val[float64], reqValidNum float64, validBool omit.Val[bool], reqValidBool bool, reqStrFormat uuid.UUID, dateTime chrono.DateTime, date chrono.Date, timeVal chrono.Time, durationVal time.Duration, arrayPrimExplode omit.Val[GetUserGetArrayPrimExplodeParam], arrayPrimFlat GetUserGetArrayPrimFlatParam, arrayPrimIntExplode omit.Val[GetUserGetArrayPrimIntExplodeParam], arrayPrimIntFlat GetUserGetArrayPrimIntFlatParam, arrayEnumExplode omit.Val[GetUserGetArrayEnumExplodeParam], arrayEnumFlat GetUserGetArrayEnumFlatParam) (*oa3gen.HTTPStatusNotModified, error) {
    panic("not implemented")
}
// SetUser post /users/{id}
// Sets a user
func (a API) SetUser(w http.ResponseWriter, r *http.Request, body *oa3gen.Primitives, id string, paramComponent string) (oa3gen.SetUserResponse, error) {
    panic("not implemented")
}
*/
