// Code generated by oa3 (https://github.com/aarondl/oa3). DO NOT EDIT.
// This file is meant to be re-generated in place and/or deleted at any time.
package oa3gen

import (
	"fmt"
	"strings"

	"github.com/aarondl/oa3/support"
)

// Map types
type Map map[string][]string

// ValidateSchemaMap validates the object and returns
// errors that can be returned to the user.
func (o Map) ValidateSchemaMap() support.Errors {
	var ctx []string
	var ers []error
	var errs support.Errors
	_, _ = ers, errs

	for k, v := range o {
		var ers []error
		ctx = append(ctx, k)
		for i, v := range oo {
			var ers []error
			ctx = append(ctx, fmt.Sprintf("[%d]", i))

			errs = support.AddErrs(errs, strings.Join(ctx, "."), ers)
			ctx = ctx[:len(ctx)-1]
		}

		errs = support.AddErrs(errs, strings.Join(ctx, "."), ers)
		ctx = ctx[:len(ctx)-1]
	}

	errs = support.AddErrs(errs, "", ers...)

	return errs
}
